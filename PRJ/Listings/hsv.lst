C51 COMPILER V9.53.0.0   HSV                                                               02/16/2021 14:57:44 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE HSV
OBJECT MODULE PLACED IN .\hsv.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\APP\FRAME\hsv.c OPTIMIZE(9,SPEED) BROWSE INCDIR(..\APP\FRAME;..\COM;.
                    -.\DRV;..\HAL;..\APP) DEBUG OBJECTEXTEND PRINT(.\Listings\hsv.lst) TABS(2) OBJECT(.\hsv.obj)

line level    source

   1          #include "hsv.h"
   2          
   3          #define HSV_SCAL 100
   4          /*
   5          void rgb_to_hsv(uint8_t red, uint8_t green, uint8_t blue, hsv_t *hsv)
   6          {
   7            float h, s, v, r, g, b, minRGB, maxRGB, deltaRGB;
   8            r = red / 255.0f; 
   9            g = green / 255.0f;
  10            b = blue / 255.0f;
  11            minRGB = MIN(MIN(r, g), b);
  12            maxRGB = MAX(MAX(r, g), b);
  13            deltaRGB = maxRGB - minRGB;
  14          
  15            if (maxRGB != 0.0)
  16            {
  17              s = deltaRGB / maxRGB;
  18            }
  19            else
  20            {
  21              s = 0;
  22            }
  23            
  24            if (deltaRGB == 0.0)
  25            {
  26              h = 0.0;
  27            }
  28            else
  29            {
  30              if (r == maxRGB)
  31              {
  32                h = 60 * ((g - b) / deltaRGB + 0.0) / 360;
  33              }
  34              if (g == maxRGB)
  35              {
  36                h = 60 * ((b - r) / deltaRGB + 2.0) / 360;
  37              }
  38              if (b == maxRGB)
  39              {
  40                h = 60 * ((r - g) / deltaRGB + 4.0) / 360;
  41              }
  42            }
  43            v = maxRGB;
  44          
  45            hsv->h = h * HSV_SCAL;
  46            hsv->s = s * HSV_SCAL;
  47            hsv->v = v * HSV_SCAL;
  48          }
  49          */
  50          void hsv_to_rgb(hsv_t *hsv, uint8_t *red, uint8_t *green, uint8_t *blue)
  51          {
  52   1        data uint16_t tmp;
  53   1          data uint8_t r, g, b;
  54   1        data uint8_t i, f, p, q, t;
C51 COMPILER V9.53.0.0   HSV                                                               02/16/2021 14:57:44 PAGE 2   

  55   1      
  56   1        tmp = hsv->h * 6;
  57   1          i = tmp / HSV_SCAL;
  58   1        f = tmp - i * HSV_SCAL;
  59   1        if (f < 5) f = 0;
  60   1          p = hsv->v * (HSV_SCAL - hsv->s) / HSV_SCAL;
  61   1          q = hsv->v * (HSV_SCAL - f * hsv->s / HSV_SCAL) / HSV_SCAL;
  62   1          t = hsv->v * (HSV_SCAL - (HSV_SCAL - f) * hsv->s / HSV_SCAL) / HSV_SCAL;
  63   1      
  64   1          switch (i % 6)
  65   1        {
  66   2              case 0: r = hsv->v, g = t, b = p; break;
  67   2              case 1: r = q, g = hsv->v, b = p; break;
  68   2              case 2: r = p, g = hsv->v, b = t; break;
  69   2              case 3: r = p, g = q, b = hsv->v; break;
  70   2              case 4: r = t, g = p, b = hsv->v; break;
  71   2              case 5: r = hsv->v, g = p, b = q; break;
  72   2          }
  73   1      
  74   1          *red = r * 255 / HSV_SCAL;
  75   1          *green = g * 255 / HSV_SCAL;
  76   1          *blue = b * 255 / HSV_SCAL;
  77   1      }
  78          
  79          #undef HSV_SCAL


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    312    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
