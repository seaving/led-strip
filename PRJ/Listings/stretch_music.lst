C51 COMPILER V9.53.0.0   STRETCH_MUSIC                                                     02/16/2021 14:57:47 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE STRETCH_MUSIC
OBJECT MODULE PLACED IN .\stretch_music.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\APP\stretch_music.c OPTIMIZE(9,SPEED) BROWSE INCDIR(..\APP\FRAME;..\C
                    -OM;..\DRV;..\HAL;..\APP) DEBUG OBJECTEXTEND PRINT(.\Listings\stretch_music.lst) TABS(2) OBJECT(.\stretch_music.obj)

line level    source

   1          #include "stretch_music.h"
   2          #include "cache.h"
   3          #include "typedef.h"
   4          #include "player.h"
   5          
   6          static void __stretch_music_set(flush_param_t *param, uint8_t action_index, uint8_t start, 
   7              uint8_t end, position_type_t position_type, uint8_t fre_index, uint8_t cache_index)
   8          {
   9   1          param->color_index = param->color_index % COLOR_HSV_ARRAY1_ROWS;
  10   1      
  11   1          if (param->fade_interval == 0)
  12   1              param->fade_type = E_FADE_TYPE_KEEP;
  13   1      
  14   1          if (param->is_static_color)
  15   1          {
  16   2              param->mode = E_STRETCH_MUSIC_MODE_SINGLE;
  17   2          }
  18   1          actions[action_index].fre_index = fre_index;
  19   1          POSITION_CTRL_SET_CACHE_INDEX(&actions[action_index].position_ctrl, cache_index);
  20   1          flush_fade_music_init(param, action_index, param->mode == E_STRETCH_MUSIC_MODE_SINGLE);
  21   1      
  22   1          if (E_STRETCH_MUSIC_POSITION_LEFT1 <= param->position 
  23   1              && param->position <= E_STRETCH_MUSIC_POSITION_CLOSE1)
  24   1          {
  25   2              ctrl_set(param, 10, 1, 1, 2, action_index, start, end, position_type, 15, param->mode == E_STRETCH
             -_MUSIC_MODE_RANDOM, 1);
  26   2          }
  27   1          else
  28   1          {
  29   2              ctrl_set(param, 10, 1, 1, 2, action_index, start, end, position_type, 0, 0, 0);
  30   2          }
  31   1      }
  32          
  33          void stretch_music_set(flush_param_t *param)
  34          {
  35   1          data uint8_t action_index = 0;
  36   1      
  37   1          cache_clear(0);
  38   1          cache_clear(1);
  39   1      
  40   1          switch (param->position)
  41   1          {
  42   2              case E_STRETCH_MUSIC_POSITION_LEFT:
  43   2                  __stretch_music_set(param, action_index, 0, 49, E_POSITION_TYPE_MUSIC_STRETCH_LEFT, 1, 0);
  44   2                  break;
  45   2              case E_STRETCH_MUSIC_POSITION_LEFT1:
  46   2                  __stretch_music_set(param, action_index, 0, 49, E_POSITION_TYPE_MUSIC_STRETCH_FLOAT_LEFT, 1, 0
             -);
  47   2                  break;
  48   2              case E_STRETCH_MUSIC_POSITION_LEFT2:
  49   2                  __stretch_music_set(param, action_index, 0, 6, E_POSITION_TYPE_MUSIC_FLOAT_LEFT, 1, 0); action
             -_index ++;
  50   2                  __stretch_music_set(param, action_index, 7, 13, E_POSITION_TYPE_MUSIC_FLOAT_LEFT, 3, 0); actio
             -n_index ++;
C51 COMPILER V9.53.0.0   STRETCH_MUSIC                                                     02/16/2021 14:57:47 PAGE 2   

  51   2                  __stretch_music_set(param, action_index, 14, 20, E_POSITION_TYPE_MUSIC_FLOAT_LEFT, 5, 0); acti
             -on_index ++;
  52   2                  __stretch_music_set(param, action_index, 21, 27, E_POSITION_TYPE_MUSIC_FLOAT_LEFT, 7, 0); acti
             -on_index ++;
  53   2                  __stretch_music_set(param, action_index, 28, 34, E_POSITION_TYPE_MUSIC_FLOAT_LEFT, 9, 0); acti
             -on_index ++;
  54   2                  __stretch_music_set(param, action_index, 35, 42, E_POSITION_TYPE_MUSIC_FLOAT_LEFT, 11, 0); act
             -ion_index ++;
  55   2                  __stretch_music_set(param, action_index, 43, 49, E_POSITION_TYPE_MUSIC_FLOAT_LEFT, 13, 0);
  56   2                  break;
  57   2              case E_STRETCH_MUSIC_POSITION_RIGHT:
  58   2                  __stretch_music_set(param, action_index, 0, 49, E_POSITION_TYPE_MUSIC_STRETCH_RIGHT, 1, 0);
  59   2                  break;
  60   2              case E_STRETCH_MUSIC_POSITION_RIGHT1:
  61   2                  __stretch_music_set(param, action_index, 0, 49, E_POSITION_TYPE_MUSIC_STRETCH_FLOAT_RIGHT, 1, 
             -0);
  62   2                  break;
  63   2              case E_STRETCH_MUSIC_POSITION_OPEN:
  64   2                  __stretch_music_set(param, action_index, 0, 24, E_POSITION_TYPE_MUSIC_STRETCH_LEFT, 1, 0); act
             -ion_index ++;
  65   2                  __stretch_music_set(param, action_index, 25, 49, E_POSITION_TYPE_MUSIC_STRETCH_RIGHT, 1, 0);
  66   2                  break;
  67   2              case E_STRETCH_MUSIC_POSITION_OPEN1:
  68   2                  __stretch_music_set(param, action_index, 0, 24, E_POSITION_TYPE_MUSIC_STRETCH_FLOAT_LEFT, 1, 0
             -); action_index ++;
  69   2                  __stretch_music_set(param, action_index, 25, 49, E_POSITION_TYPE_MUSIC_STRETCH_FLOAT_RIGHT, 1,
             - 0);
  70   2                  break;
  71   2              case E_STRETCH_MUSIC_POSITION_OPEN2:
  72   2                  __stretch_music_set(param, action_index, 0, 24, E_POSITION_TYPE_MUSIC_STRETCH_LEFT, 12, 1); ac
             -tion_index ++;
  73   2                  __stretch_music_set(param, action_index, 25, 49, E_POSITION_TYPE_MUSIC_STRETCH_RIGHT, 12, 1); 
             -action_index ++;
  74   2      
  75   2                  param->is_static_color = true;
  76   2                  param->fade_interval = 0;
  77   2                  param->color_index = (param->color_index + 1) % COLOR_HSV_ARRAY1_ROWS;
  78   2                  __stretch_music_set(param, action_index, 16, 24, E_POSITION_TYPE_MUSIC_STRETCH_LEFT, 1, 0); ac
             -tion_index ++;
  79   2                  __stretch_music_set(param, action_index, 25, 33, E_POSITION_TYPE_MUSIC_STRETCH_RIGHT, 1, 0);
  80   2                  break;
  81   2              case E_STRETCH_MUSIC_POSITION_CLOSE:
  82   2                  __stretch_music_set(param, action_index, 0, 24, E_POSITION_TYPE_MUSIC_STRETCH_RIGHT, 1, 0); ac
             -tion_index ++;
  83   2                  __stretch_music_set(param, action_index, 25, 49, E_POSITION_TYPE_MUSIC_STRETCH_LEFT, 1, 0);
  84   2                  break;
  85   2              case E_STRETCH_MUSIC_POSITION_CLOSE1:
  86   2                  __stretch_music_set(param, action_index, 0, 24, E_POSITION_TYPE_MUSIC_STRETCH_FLOAT_RIGHT, 1, 
             -0); action_index ++;
  87   2                  __stretch_music_set(param, action_index, 25, 49, E_POSITION_TYPE_MUSIC_STRETCH_FLOAT_LEFT, 1, 
             -0);
  88   2                  break;
  89   2              default:
  90   2                  break;
  91   2          }
  92   1      
  93   1          //把配置的action设置到播放器
  94   1          player_set(0, 0, action_index, 0, true);
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.53.0.0   STRETCH_MUSIC                                                     02/16/2021 14:57:47 PAGE 3   

   CODE SIZE        =    825    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
